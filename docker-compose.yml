version: '3.8'

services:
  db:
    container_name: todolist_db
    image: postgres:12.0-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: todolistdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - wishlist_network

  redis:
    image: redis:6-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - wishlist_network

  backend:
    build: ./backend
    container_name: todolist_backend
    # command: bash -c "python manage.py collectstatic --no-input && python manage.py migrate && python manage.py runserver 0.0.0.0:8080"
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - ./static:/app/staticfiles
      - ./media:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    networks:
      - wishlist_network

  celery-worker:
    build: ./backend
    container_name: todolist_celery_worker
    command: celery -A todo_list worker -l info --pool=solo
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - backend
    networks:
      - wishlist_network
    restart: unless-stopped

  celery-beat:
    build: ./backend
    container_name: todolist_celery_beat
    command: celery -A todo_list beat -l info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - backend
    networks:
      - wishlist_network
    restart: unless-stopped

volumes:
  db_data:

networks:
  wishlist_network:
    driver: bridge
